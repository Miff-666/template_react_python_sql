{"version":3,"sources":["components/login/login.module.css","components/setting/setting.module.css","api/api.js","action/global.action.js","store/reducer/global.reducer.js","store/reducer/index.reducers.js","store/store.configure.js","components/login/login.jsx","components/setting/setting.jsx","components/main/main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","instance","axios","baseURL","headers","sendAPI","login","token","post","save","app_id","is_integration","select_user_id","select_site_id","GLOBAL_CONST","action","auth","dispatch","result","is_auth","Api","then","data","console","log","type","payload","catch","err","input_token_change","val","on_select_user","key","message","loading","content","saved","response","status","success","duration","error","on_select_site","set_integration_status","initialState","input_token_text","input_token_description","input_token_value","login_btn_text","error_auth_text","error_auth_show","user_list","site_list","url_webhook","is_access_api_chat","state","rootReducer","combineReducers","global","store","createStore","applyMiddleware","thunk","Login","props","style","padding","className","styles","parent","align","span","Text","placeholder","name","size","width","value","onChange","e","target","onClick","htmlType","float","Setting","direction","color","href","title","marginRight","disabled","checkedChildren","unCheckedChildren","checked","copyable","code","onSelect","map","el","Option","user_id","user_name","site_id","site_name","Main","this","Component","connect","global_action","App","locale","ruRu","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3818584b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"parent\":\"login_parent__3nX4_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"parent\":\"setting_parent__2pXbh\"};","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: '/livetex/api/',\r\n    headers: {\r\n        'Content-Type': 'application/x-www-form-urlencoded',\r\n    }\r\n});\r\n\r\nconst sendAPI = {\r\n    login(token) {\r\n        return instance.post(`/`, {'type': 'auth', \"token\": token});\r\n    },\r\n    save(app_id, is_integration, select_user_id, select_site_id){\r\n        return instance.post(`/`,\r\n            {\r\n                'type': 'save',\r\n                'is_integration': is_integration,\r\n                'select_user_id': select_user_id,\r\n                'select_site_id': select_site_id,\r\n                'app_id': app_id\r\n            });\r\n    }\r\n}\r\n\r\nexport default sendAPI","import Api from '../api/api'\r\nimport {message} from \"antd\";\r\n\r\nexport const GLOBAL_CONST = {\r\n    SET_AUTH: 'SET_AUTH',\r\n    SET_TOKEN: 'SET_TOKEN',\r\n    SET_SELECT_USER_ID: 'SET_SELECT_USER_ID',\r\n    SET_SELECT_SITE_ID: 'SET_SELECT_SITE_ID',\r\n    SAVE: 'SAVE',\r\n    SET_INTEGRATION_STATUS: 'SET_INTEGRATION_STATUS'\r\n}\r\n\r\nexport const action = {\r\n    auth,\r\n    input_token_change,\r\n    on_select_user,\r\n    save,\r\n    on_select_site,\r\n    set_integration_status,\r\n}\r\n\r\nfunction auth(token){\r\n    return dispatch => {\r\n        let result = {\r\n            is_auth: false,\r\n        }\r\n        Api.login(token)\r\n            .then(\r\n                (data)=>{\r\n                    result = data.data;\r\n                    console.log(result);\r\n                    dispatch( {\r\n                        type:GLOBAL_CONST.SET_AUTH,\r\n                        payload: result\r\n                    })\r\n                }\r\n            ).catch(\r\n            (err)=>{\r\n                console.log(result, err);\r\n                dispatch(\r\n                    {\r\n                        type:GLOBAL_CONST.SET_AUTH,\r\n                        payload: result\r\n                    }\r\n                )\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\nfunction input_token_change(val){\r\n    return {\r\n        type:GLOBAL_CONST.SET_TOKEN,\r\n        payload: val,\r\n    }\r\n}\r\n\r\nfunction on_select_user(val){\r\n    return {\r\n        type: GLOBAL_CONST.SET_SELECT_USER_ID,\r\n        payload: val,\r\n    }\r\n}\r\n\r\nfunction on_select_site(val){\r\n    return {\r\n        type: GLOBAL_CONST.SET_SELECT_SITE_ID,\r\n        payload: val,\r\n    }\r\n}\r\n\r\nfunction save(app_id, is_integration, select_user_id, select_site_id){\r\n    return dispatch => {\r\n        const key = 'сохранение';\r\n        message.loading({ content: 'Сохранение...', key });\r\n        let result = {\r\n            saved: false\r\n        }\r\n        Api.save(app_id, is_integration, select_user_id, select_site_id)\r\n            .then(\r\n                (response)=>{\r\n                    switch (response.status){\r\n                        case 200:\r\n                            response.data.saved?\r\n                                message.success({ content: 'Сохранено!', key, duration: 2 }):\r\n                                message.error({ content: 'Не сохранено!', key, duration: 2 })\r\n                            dispatch({\r\n                                type: GLOBAL_CONST.SAVE,\r\n                                payload: result.saved\r\n                            } )\r\n                            break\r\n                        default:\r\n                            message.error({ content: 'Не сохранено!', key, duration: 2 })\r\n                            result = {\r\n                                saved: false\r\n                            }\r\n                            dispatch({\r\n                                type: GLOBAL_CONST.SAVE,\r\n                                payload: result.saved\r\n                            } )\r\n                    }\r\n                }\r\n            ).catch(\r\n            (err)=>{\r\n                message.error({ content: 'Не сохранено!', key, duration: 2 })\r\n                console.log(result, err);\r\n                dispatch({\r\n                    type: GLOBAL_CONST.SAVE,\r\n                    payload: result.saved\r\n                } )\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\nfunction set_integration_status(val) {\r\n    return {\r\n        type: GLOBAL_CONST.SET_INTEGRATION_STATUS,\r\n        payload: val,\r\n    }\r\n}","import { GLOBAL_CONST } from '../../action/global.action'\r\n\r\nconst initialState = {\r\n    is_auth: false,\r\n    input_token_text: 'Токен API',\r\n    input_token_description: 'Введите токен API UIS',\r\n    input_token_value: '',\r\n    login_btn_text: 'Войти',\r\n    error_auth_text: 'Неправильный токен или недостаточно прав у токена',\r\n    error_auth_show: false,\r\n    app_id: 0,\r\n    select_user_id: 0,\r\n    user_list: [],\r\n    site_list: [],\r\n    select_site_id: 0,\r\n    is_integration: false,\r\n    url_webhook: '',\r\n    is_access_api_chat: false,\r\n}\r\n\r\n\r\nexport default function reducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case GLOBAL_CONST.SET_AUTH:\r\n            return auth(state, action.payload)\r\n        case GLOBAL_CONST.SET_TOKEN:\r\n            return {...state, input_token_value: action.payload}\r\n        case GLOBAL_CONST.SET_SELECT_USER_ID:\r\n            return  {...state, select_user_id: action.payload}\r\n        case GLOBAL_CONST.SET_SELECT_SITE_ID:\r\n            return  {...state, select_site_id: action.payload}\r\n        case GLOBAL_CONST.SAVE:\r\n            return {...state}\r\n        case GLOBAL_CONST.SET_INTEGRATION_STATUS:\r\n            return {...state, is_integration: action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nfunction auth(state, payload) {\r\n    if(payload.is_auth){\r\n        return {\r\n            ...state,\r\n            is_auth: payload.is_auth,\r\n            app_id: payload.app_id,\r\n            user_list: payload.user_list,\r\n            site_list: payload.site_list,\r\n            select_user_id: payload.select_user_id,\r\n            select_site_id: payload.select_site_id,\r\n            is_integration: payload.is_integration,\r\n            url_webhook: payload.url_webhook,\r\n            error_auth_show: false,\r\n            is_access_api_chat: payload.is_access_api_chat,\r\n        }\r\n    }else{\r\n        return {\r\n            ...state,\r\n            is_auth: payload.is_auth,\r\n            app_id: 0,\r\n            user_list: [],\r\n            select_user_id: 0,\r\n            error_auth_show: true,\r\n            is_access_api_chat: false\r\n        }\r\n    }\r\n}","import { combineReducers } from 'redux';\r\n\r\nimport global_reducer from './global.reducer';\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    global: global_reducer,\r\n})","import { createStore, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk';\r\nimport { rootReducer } from './reducer/index.reducers'\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\nexport default store","import React from \"react\";\r\nimport styles from './login.module.css'\r\nimport { Input, Button, Row, Col, Typography, Alert } from 'antd';\r\n\r\n\r\nconst Login = (props)=>{\r\n    const style = { padding: '15px 0' };\r\n    return(\r\n        <div className={styles.parent}>\r\n            <Row style={style} type=\"flex\" align=\"middle\">\r\n                <Col span={6}>\r\n                    <Typography.Text align=\"middle\">\r\n                        {props.store.global.input_token_text}\r\n                    </Typography.Text>\r\n                </Col>\r\n                <Col span={18}>\r\n                    <Input\r\n                        placeholder={props.store.global.input_token_description}\r\n                        name=\"username\"\r\n                        size={'large'}\r\n                        width={'100%'}\r\n                        value={props.store.global.input_token_value}\r\n                        onChange={(e)=>{props.action.global.input_token_change(e.target.value)}}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n\r\n            {props.store.global.error_auth_show?\r\n                <Row style={style} type=\"flex\" align=\"middle\">\r\n                    <Alert message={props.store.global.error_auth_text} type=\"error\" />\r\n                </Row>:\r\n                null}\r\n\r\n            <Row style={style} type=\"flex\" align=\"middle\">\r\n                <Col span={24}>\r\n                    <Button\r\n                        type=\"primary\"\r\n                        size={'large'}\r\n                        onClick={()=>props.action.global.auth(\r\n                            props.store.global.input_token_value\r\n                        )}\r\n                        htmlType=\"submit\"\r\n                        style={{float: 'right'}}\r\n                    >\r\n                        {props.store.global.login_btn_text}\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login","import React from \"react\";\r\nimport styles from './setting.module.css'\r\nimport {Input, Button, Row, Col, Typography, Alert, Select, message, Switch, Space} from 'antd';\r\nimport ExclamationCircleOutlined from \"@ant-design/icons/lib/icons/ExclamationCircleOutlined\";\r\n\r\nconst Setting = (props)=>{\r\n    const style = { padding: '15px 0' };\r\n    return(\r\n        <div className={styles.parent}>\r\n            {!props.store.global.is_access_api_chat?\r\n                <Space direction={'horizontal'}>\r\n                    <ExclamationCircleOutlined style={{color: 'red'}} />\r\n                    <Typography.Text style={{color: 'red'}}>Данный токен не имеет прав на создания чата или у Вас не подключена опция<br></br>\"U_API Аналитика\" в <a href={'https://app.uiscom.ru/#controller.id=%22account.tariffs.controller.Page%22'} target={'_blank'} title={'Перейти в личный кабинет'}>личном кабинете</a></Typography.Text>\r\n                </Space>: null\r\n            }\r\n            <Row style={style} type=\"flex\" align=\"middle\">\r\n                <Col span={10}>\r\n                    <Typography.Text align=\"middle\" style={{marginRight: '5px'}}>\r\n                        Интеграция:\r\n                    </Typography.Text>\r\n                </Col>\r\n                <Col span={14}>\r\n                    <Switch\r\n                        disabled={!props.store.global.is_access_api_chat}\r\n                        style={{float: 'right'}}  size={'large'}\r\n                        checkedChildren=\"ВКЛ\" unCheckedChildren=\"ВЫКЛ\"\r\n                        checked={props.store.global.is_integration}\r\n                        onChange={(val)=>props.action.global.set_integration_status(val)}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n            <Row style={style} type=\"flex\" align=\"middle\">\r\n                <Col>\r\n                    <Typography.Text align=\"middle\" style={{marginRight: '5px'}} disabled={!props.store.global.is_integration}>\r\n                        Адрес для вебхуков Livetex:\r\n                    </Typography.Text>\r\n                </Col>\r\n                <Col>\r\n                    <Typography.Text copyable={props.store.global.is_integration} code={true} disabled={!props.store.global.is_integration}>\r\n                        {props.store.global.url_webhook}\r\n                    </Typography.Text>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    <a href={\"https://my.livetex.ru/products/integrations\"} title={'Перейти в настройки Livetex'} target={'_blank'}>https://my.livetex.ru/products/integrations</a>\r\n                </Col>\r\n            </Row>\r\n            <Row style={style} type=\"flex\" align=\"middle\">\r\n                <Col span={7}>\r\n                    <Typography.Text align=\"middle\" style={{marginRight: '5px'}} disabled={!props.store.global.is_integration}>\r\n                        Сотрудник для чата:\r\n                    </Typography.Text>\r\n                </Col>\r\n                <Col span={1}>{props.store.global.select_user_id==null? <ExclamationCircleOutlined style={{color: 'red'}} />: null}</Col>\r\n                <Col span={16}>\r\n                    <Select\r\n                        disabled={!props.store.global.is_integration}\r\n                        value={props.store.global.select_user_id}\r\n                        style={{width: '100%'}} size={'large'}\r\n                        onSelect={(val)=>props.action.global.on_select_user(val)}\r\n                    >\r\n                        {\r\n                            props.store.global.user_list.map((el)=>{\r\n                                return <Select.Option value={el.user_id}>{el.user_name}</Select.Option>\r\n                            })\r\n                        }\r\n                    </Select>\r\n                </Col>\r\n            </Row>\r\n            <Row style={style} type=\"flex\" align=\"middle\">\r\n                <Col span={7}>\r\n                    <Typography.Text align=\"middle\" style={{marginRight: '5px'}} disabled={!props.store.global.is_integration}>\r\n                        Сайт для чата:\r\n                    </Typography.Text>\r\n                </Col>\r\n                <Col span={1}>{props.store.global.select_site_id==null? <ExclamationCircleOutlined style={{color: 'red'}} />: null}</Col>\r\n                <Col span={16}>\r\n                    <Select\r\n                        disabled={!props.store.global.is_integration}\r\n                        value={props.store.global.select_site_id}\r\n                        style={{width: '100%'}} size={'large'}\r\n                        onSelect={(val)=>props.action.global.on_select_site(val)}\r\n                    >\r\n                        {\r\n                            props.store.global.site_list.map((el)=>{\r\n                                return <Select.Option value={el.site_id}>{el.site_name}</Select.Option>\r\n                            })\r\n                        }\r\n                    </Select>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col span={17}></Col>\r\n                <Col span={7}>\r\n                    <Button\r\n                        type=\"primary\"\r\n                        size={'large'}\r\n                        onClick={()=>props.action.global.save(\r\n                            props.store.global.app_id,\r\n                            props.store.global.is_integration,\r\n                            props.store.global.select_user_id,\r\n                            props.store.global.select_site_id,\r\n                        )}\r\n                        htmlType=\"submit\"\r\n                        style={{float: 'right'}}\r\n                    >\r\n                        Сохранить\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Setting","import React, {Component} from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport Login from '../login/login'\r\nimport Setting from '../setting/setting'\r\n\r\nimport {action as global_action} from '../../action/global.action'\r\n\r\nclass Main extends Component {\r\n    render(){\r\n        return(\r\n                <>\r\n                    {this.props.store.global.is_auth?\r\n                        <Setting {...this.props}/>:\r\n                        <Login {...this.props}/>\r\n                    }\r\n                </>\r\n            )\r\n    }\r\n}\r\n\r\n//прокидываем данные из стор в пропс\r\nconst mapStateToProps = store => {\r\n    return {\r\n        store: store\r\n    }\r\n}\r\n\r\n//прокидываем диспатч из стор в пропс\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        action: {\r\n            global: {\r\n                auth: (token)=> dispatch(global_action.auth(token)),\r\n                input_token_change: (val)=> dispatch(global_action.input_token_change(val)),\r\n                on_select_user: (val)=> dispatch(global_action.on_select_user(val)),\r\n                save: (app_id, is_integration, select_user_id, select_site_id)=> dispatch(global_action.save(app_id, is_integration, select_user_id, select_site_id)),\r\n                on_select_site: (val)=> dispatch(global_action.on_select_site(val)),\r\n                set_integration_status: (val)=> dispatch(global_action.set_integration_status(val)),\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Main)","import React from 'react';\nimport { Provider } from 'react-redux';\nimport './App.css';\n\nimport store from './store/store.configure'\n\nimport 'antd/dist/antd.css';\nimport {ConfigProvider} from 'antd';\nimport ruRu from 'antd/es/locale/ru_RU';\n\nimport Main from './components/main/main'\n\nfunction App() {\n  return (\n      <Provider store={store}>\n        <ConfigProvider locale={ruRu}>\n          <Main />\n        </ConfigProvider>\n      </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}